
Parsing
	[ ] Definitions and stuff :'(
	[ ]	Add preprocessor instruction support
	[ ] Add some sort of foreign function/variable/class interface
		`extern<some_func> int f() void;`
		`extern<some_class> class C {}`
	[ ] Notes at top of LetStatement.flx
	[ ] `using MyClass for literal.integer;`
	[ ] `using MyNamespace in {}` <- probs involves tracking namespaces, rip

Type checking
	Haha nope.

Compilation
Initial standard library
Optimisation
Full standard library

Things to consider implementing:
add const-function-only members to initialised classes i.e.
	class T {
		int x;
	}
	int T:make_x_0() self.x = 0;
..useful for type casting...
	MyType int:operator->() = new MyType();
