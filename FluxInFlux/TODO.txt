
v0.1.0
	IR
		[ ] Declarations
		[ ] Variable lookups
		[ ] AST -> IR conversion
		[ ] Function specialisation based on parameter count

	Compilation
		[ ] Basic compilation to Lua

	stdlib
		[ ] Lua-only stuff

	fluxc.lua
		^ needs to be made

v0.1.1
	Parsing
		[ ]	Add preprocessor instruction support
		[ ] Class alias definitions (`class MyCallback = function int(float, string);`)
		[ ] Class definitions
			`template<T> class List [int, T] extends flux_native::primitive<List, T> {}`
			Need to think about how you're gonna handle public/private
		[ ] Add extern classes
			`extern<some_class> class C {}`
		[ ] Add #! removal from the first line of file
		[ ] Auto-generate headers for source-only imports (all non-auto decls)
		[ ] Optimise statement/expression parsing
		[ ] Fix abc<T>:abc() not classing as definition
		[ ] `using MyClass for literal.integer;`
		[ ] `let len(x1, y1, x2, y2) = dx ** 2 + dy ** 2 where dx = x1 - x2, dy = y1 - y2;`
		[ ] Allow empty block for `while` and `for` loops
		[ ] Lambda function expressions
		[ ] Allow `while x;` and `for (...);`
		[ ] Do statement should be an expression instead

	IR
		[ ] Type checking

	Compilation
		[ ] Optimisation

	stdlib
		[ ] A bunch of stuff
