
import references.locations.InternalReferenceLocation;
import references.locations.ExternalReferenceLocation;

import Scope;
import Node;

namespace Flux::IR;

class File {
	File[] import_list;
	Scope scope;
	string name;
	int external_scope_index_ptr;

	Node[] statements;

	File(string name) {
		self.name = name;
		self.import_list = [];
		self.scope = new Flux::IR::Scope;
		self.statements = [];
	}

	void finalise_external_scope();

	Declaration[] lookup(string name);
	Declaration[] lookup_pattern(string pattern);

	Node push(Node node);
}

void File:finalise_external_scope() {
	self.external_scope_index_ptr = #self.scope.declarations;
}

Reference[] File:lookup(string name) {
	Reference[] defs = self.scope:lookup( name, true );

	foreach ref in defs
		ref:set_location( new Flux::IR::InternalReferenceLocation( self ) );

	for (int i = #self.import_list; i > 0; i--) {
		foreach def in self.import_list[i].scope:lookup( name, false, self.import_list[i].external_scope_index_ptr ) {
			def:set_location( new Flux::IR::ExternalReferenceLocation( self.import_list[i] ) );
			defs[#defs + 1] = def;
		}
	}

	return defs;
}

Reference[] File:lookup_pattern(string pattern) {
	Reference[] defs = self.scope:lookup_pattern( name, true );

	foreach ref in defs
		ref:set_location( new Flux::IR::InternalReferenceLocation( self ) );

	for (int i = #self.import_list; i > 0; i--) {
		foreach def in self.import_list[i].scope:lookup_pattern( name, false, self.import_list[i].external_scope_index_ptr ) {
			def:set_location( new Flux::IR::ExternalReferenceLocation( self.import_list[i] ) );
			defs[#defs + 1] = def;
		}
	}

	return defs;
}

Node File:push(Node node) {
	self.statements[#self.statements + 1] = node;

	return node;
}
