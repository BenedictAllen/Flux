
import Scope;
import Node;

namespace Flux::IR;

class File {
	Scope foreign_scope;
	Scope local_scope;
	string name;

	Node[] statements;

	File(string name) {
		self.name = name;
		self.foreign_scope = new Flux::IR::Scope;
		self.local_scope = new Flux::IR::Scope;
		self.statements = [];
	}

	Declaration[] lookup(string name);
	Declaration[] lookup(string name, int template_count);

	Node push(Node node);
}

Declaration[] File:lookup(string name, null int template_count) {
	Declaration[] defs = self.local_scope:lookup( name, template_count );

	foreach def in self.foreign_scope:lookup( name, template_count )
		defs[#defs + 1] = def;

	return defs;
}

Node File:push(Node node) {
	self.statements[#self.statements + 1] = node;

	return node;
}
