
import Parsing.Block;
import statements.Statement;

namespace Flux::IR;

class Block {
	Node[] nodes;

	Block(Node[] nodes) {
		self.nodes = nodes;
	}

	string serialize();

	static Block fromAST(State state, Parsing::Block block);
}

Block Block:fromAST(State state, Parsing::Block block) {
	Flux::IR::Node[] nodes = [];

	foreach statement in block {
		Node node = Flux::IR::Statement:fromAST( state, statement );

		if node != Flux::IR::Node.nothing
			nodes[#nodes + 1] = node;
	}

	return new Flux::IR::Block( nodes );
}

string Block:serialize()
	= self.nodes `concattenate` ",\n";
