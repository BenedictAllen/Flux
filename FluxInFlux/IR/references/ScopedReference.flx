
import Reference;

namespace Flux::IR;

class ScopedReference extends Flux::IR::Reference {
	Scope scope;
	int index;

	ScopedReference(ReferenceLocation location, Scope scope, int index) {
		self.location = location;
		self.scope = scope;
		self.index = index;
	}

	Declaration get_decl();
}

bool ScopedReference:exact_type(Type t)
	= self.scope:get_index( self.index ).type:is( t );

bool ScopedReference:casts_type(Type t)
	= self.scope:get_index( self.index ).type:casts_to( t );

void ScopedReference:set_location(ReferenceLocation location)
	self.location = location;

Node ScopedReference:get_node()
	= self;

Declaration ScopedReference:get_decl()
	= self.scope:get_index( self.index );

string ScopedReference:serialize()
	= "scoperef(" `concat` self.location:serialize() `concat` ","
	`concat` self.index `concat` ")";
