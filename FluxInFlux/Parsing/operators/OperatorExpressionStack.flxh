
import Operators;
import expressions.BacktickExpression;
import imports.Source;

namespace Flux::Parsing;

// used for parsing binary operator expressions
class OperatorExpressionStack {
	private Operator::Binary[] operators;
	private Position[] operator_positions;
	private ASTNode[] operands;

	OperatorExpressionStack() {
		self.operators = [];
		self.operator_precedences = [];
		self.operator_positions = [];
		self.operator_left_assoc = [];
		self.operands = [];
	}

	private Operator::Binary pop_operator();
	private Expression pop_operand();

	private void push_operand(ASTNode e);
	private void push_operator(Operator::Binary op, Position p);

	private bool get_term(Source source);

	private void collapse();

	bool get_first_term(Source source);
	bool get_next_term(Source source);

	ASTNode result();
}
