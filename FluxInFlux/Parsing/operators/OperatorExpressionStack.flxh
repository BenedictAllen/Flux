
namespace Flux::Parsing;

class OperatorExpressionStack {
	private string[] operators;
	private OperatorMode[] operator_modes;
	private int[] operator_precedences;
	private Position[] operator_positions;
	private ASTNode[] operands;
	private bool last_was_expression;

	OperatorExpression() {
		self.operators = [];
		self.operator_types = [];
		self.operator_positions = [];
		self.operands = [];
	}

	private void popOperator();
	private Expression popOperand();

	bool wasLastBinaryOperator();
	bool wasLastLeftUnaryOperator();
	bool wasLastRightUnaryOperator();
	bool wasLastExpression();

	void pushOperand(ASTNode e);
	void pushBinaryOperator(string e, int precedence, Position p);
	void pushLeftUnaryOperator(string e, int precedence, Position p);
	void pushRightUnaryOperator(string e, int precedence, Position p);

	void collapse();
	ASTNode result();
}
