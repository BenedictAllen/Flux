
import ASTNode;
import TemplatedName;

namespace Flux::Parsing;

class MethodDefinition extends Flux::Parsing::ASTNode {
	TemplateList _template;
	TemplatedName return_type;
	TemplatedName _class;
	string method;

	bool is_static;
	bool is_public;
	bool is_vararg;

	TemplatedName[] parameter_types;

	ASTNode definition;

	MethodDefinition(TemplateList _template, TemplatedName return_type, _class, string method, bool is_static, is_public, TemplatedName[] parameter_types, ASTNode definition, bool is_vararg) {
		self._template = _template;
		self.return_type = return_type;
		self._class = _class;
		self.method = method;
		self.is_static = is_static;
		self.is_public = is_public;
		self.parameter_types = parameter_types;
		self.definition = definition;
		self.is_vararg = is_vararg;
	}
}

string MethodDefinition:serialize()
	= (self._template && "template <" `concat` self._template:serialize() `concat` ">" || "")
	`concat` (self.is_public && "public " || "private ")
	`concat` (self.is_static && "static " || "")
	`concat` self.return_type:serialize()
	`concat` " " `concat` self._class:serialize()
	`concat` ":" `concat` self.method
	`concat` "(" `concat` (self.parameter_types `concattenate` ", ") `concat` ") = "
	`concat` self.definition:serialize();
