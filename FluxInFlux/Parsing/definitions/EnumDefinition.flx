
import ASTNode;
import ExternReference;

namespace Flux::Parsing;

class EnumDefinition extends Flux::Parsing::ASTNode {
	string name;
	string[] members;
	bool is_public;
	ExternReference extern_ref;

	EnumDefinition(string name, ExternReference extern_ref, string[] members, bool is_public, Position position) {
		self.name = name;
		self.extern_ref = extern_ref;
		self.members = members;
		self.is_public = is_public;
		self.position = position;
	}
}

string EnumDefinition:serialize()
	= (self.extern_ref && self.extern_ref:serialize() `concat` "\n" || "")
	`concat` (self.is_public && "public enum " || "private enum ") `concat` self.name
	`concat` " {\n\t" `concat` table.concat( self.members, ";\n\t" ) `concat` "\n}";
