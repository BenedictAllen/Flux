
namespace Flux::Parsing;

ArrayExpression ArrayExpression:parse(Source source)
	let position = source.lexer:get().position;
	then if source.lexer:skip(Symbol, "[") {
		Lexer lexer = source.lexer;
		Expression[] values = [];

		if !lexer:skip(Symbol, "]") {
			repeat
				values[#values + 1] = Flux::Parsing::Expression:parse(source) || source:error "expected expression";
			while lexer:skip(Symbol, ",");

			if !lexer:skip(Symbol, "]") source:error "expected ']' to close array";
		}

		return new Flux::Parsing::ArrayExpression(values, position);
	}
	else return null;

string ArrayExpression:serialize()
	= "[" `concat` (self.values `concattenate` ", ") `concat` "]";
