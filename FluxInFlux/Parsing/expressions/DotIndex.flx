
namespace Flux::Parsing;

class DotIndex extends RightUnaryExpression {
	Expression value;
	string index;

	DotIndex( Expression value, string index, null Position position = value.position ) {
		self.value = value;
		self.index = index;
		self.position = position;
	}

	static ASTNode parse(Source source);
}

ASTNode DotIndex:parse( Source source, Expression value )
	= index && new Flux::Parsing::DotIndex( value, index, position )
	where lexer = source.lexer
	where position = lexer:get().position
	where index = lexer:skip( Symbol, "." ) && (lexer:skipValue( Identifier ) || source:error "expected index name after '.'");

string DotIndex:serialize()
	= Flux::Parsing::serializeExpression( self.value ) `concat` "." `concat` self.index;
