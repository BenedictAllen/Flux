
namespace Flux::Parsing;

const string POSTOP = "postop", PREOP = "preop";

class OperatorExpressionStack {
	private string[] operators;
	private string[] operator_types;
	private int[] operator_precedences;
	private Position[] operator_positions;
	private Expression[] operands;
	private string last;

	OperatorExpression() {
		self.operators = [];
		self.operator_types = [];
		self.operator_positions = [];
		self.operands = [];
	}

	private void popOperator();
	private Expression popOperand();

	bool wasLastBinaryOperator();
	bool wasLastLeftUnaryOperator();
	bool wasLastRightUnaryOperator();
	bool wasLastExpression();

	void pushOperand(Expression e);
	void pushBinaryOperator(string e, int precedence, Position p);
	void pushLeftUnaryOperator(string e, int precedence, Position p);
	void pushRightUnaryOperator(string e, int precedence, Position p);

	void collapse();
	Expression result();
}
