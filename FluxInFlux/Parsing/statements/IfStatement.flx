
// ! Add ambiguity checks
// !! if this
// !! 	if that
// !! 		thing();
// !! else other(); <- for the first or second if statement?
// !! can lead to confusing problems so make it error, if possible

namespace Flux::Parsing;

class IfStatement extends Flux::Parsing::Statement {
	Expression condition;
	Block block, elseblock;

	IfStatement(Expression condition, Block block, Block elseblock, null Position position = condition.position) {
		self.condition = condition;
		self.block = block;
		self.elseblock = elseblock;
		self.position = position;
	}
}

bool IfStatement:parse(Source source) {
	let lexer = source.lexer;
	let position = lexer:get().position;

	if !lexer:skip( Keyword, "if" )
		return false;

	let condition = Flux::Parsing::Expression:parse( source ) || source:error "expected condition after 'if'";
	source:pushContext();
	let block = Flux::Parsing::Block:parse( source );
	source:popContext();
	let elseblock = lexer:skip( Keyword, "else" ) && Flux::Parsing::Block:parse( source );

	source:push( new Flux::Parsing::IfStatement(condition, block, elseblock, position) );

	return true;
}

string IfStatement:serialize()
	= "if " `concat` self.condition:serialize() `concat` " " `concat` self.block:serialize() `concat`
		(self.elseblock && "\nelse " `concat` self.elseblock:serialize() || "");
