
namespace Flux::Parsing;

IfStatement IfStatement:parse(Source source) {
	let lexer = source.lexer;
	let position = lexer:get().position;

	if !lexer:skip( Keyword, "if" ) return;

	let condition = Flux::Parsing::Expression:parse( source ) || source:error "expected condition after 'if'";
	source:pushContext();
	let block = Flux::Parsing::Block:parse( source );
	source:popContext();
	let elseblock = lexer:skip( Keyword, "else" ) && Flux::Parsing::Block:parse( source );

	return new Flux::Parsing::IfStatement(condition, block, elseblock, position);
}

string IfStatement:serialize()
	= "if " `concat` self.condition:serialize() `concat` " " `concat` self.block:serialize() `concat`
		(self.elseblock && "\nelse " `concat` self.elseblock:serialize() || "");
