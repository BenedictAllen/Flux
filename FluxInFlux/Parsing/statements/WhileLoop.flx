
namespace Flux::Parsing;

class WhileLoop extends Flux::Parsing::Statement {
	Expression condition;
	Block block;

	WhileLoop(Expression condition, Block block, null Position position = condition.position) {
		self.condition = condition;
		self.block = block;
		self.position = position;
	}
}

bool WhileLoop:parse(Source source) {
	let lexer = source.lexer;
	let position = lexer:get().position;

	if !lexer:skip( Keyword, "while" )
		return false;

	let condition = Flux::Parsing::Expression:parse( source ) || source:error "expected condition after 'while'";
	source.file:push_context():specialise_\1();
	let block = Flux::Parsing::Block:parse( source );
	source.file:pop_context();

	source.file:push( new Flux::Parsing::WhileLoop(condition, block, position) );

	return true;
}

string WhileLoop:serialize()
	= "while " `concat` self.condition:serialize() `concat` " " `concat` self.block:serialize();
