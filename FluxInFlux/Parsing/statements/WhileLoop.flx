
import RepeatLoop;

namespace Flux::Parsing;

class WhileLoop {
	static bool parse(Source source);
}

bool WhileLoop:parse(Source source) {
	let lexer = source.lexer;
	let position = lexer:get().position;

	if !lexer:skip( Keyword, "while" )
		return false;

	let condition = Flux::Parsing::Expression:parse( source ) || source:error "expected condition after 'while'";
	source.file:push_context():specialise_loop();
	let block = Flux::Parsing::Block:parse( source );
	source.file:pop_context();

	new Flux::Parsing::Block break_block( false, position );
	new Flux::Parsing::BreakStatement break_statement( position );
	new Flux::Parsing::IfStatement sub_block( condition, block, break_block, position );
	new Flux::Parsing::ConstantExpression true_constant( Flux::Parsing::ConstantType.Boolean, "true", position );

	break_block:push( break_statement );
	source.file:push( new Flux::Parsing::RepeatLoop( true_constant, sub_block, position ) );

	return true;
}
