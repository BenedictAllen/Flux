
namespace Flux::Parsing;

ASTNode Block:parse(Source source) {
	let lexer = source.lexer;
	let position = lexer:get().position;
	
	source:pushBlock();

	if lexer:skip( Symbol, "{" )
		while !lexer:skip( Symbol, "}" ) {
			if lexer:isEOF()
				source:error "expected '}' to close block";

			Flux::Parsing::Statement:parse(source);
		}
	else
		Flux::Parsing::Statement:parse(source);

	let statements = source:popBlock();

	return new Flux::Parsing::Block( statements, position );
}

string Block:serialize()
	= self.isVoid && "void" || (#self == 0 && "{}" || "{\n\t" `concat` (self `concattenate` "\n"):gsub( "\n", "\n\t" ) `concat` "\n}");
