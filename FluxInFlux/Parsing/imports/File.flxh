
import Context;
import Lexer;
import types.Type;
import definitions.Definition;
import ASTNode;

namespace Flux::Parsing;

class File {
	string name;
	string path;

	Source source;

	File[] imports;

	Type[] types;
	ASTNode[] declarations;
	ASTNode[] statements;

	Lexer lexer;

	Context[] contexts;
	Block[] blocks;

	string{string} environment;

	File(string name, string path, Source source) {
		self.name = name;
		self.path = path;
		self.source = source;
		self.imports = [];
		self.types = [];
		self.declarations = [];
		self.statements = [];
		self.contexts = [];
		self.blocks = [];
		self.environment = {};

		foreach k, v in source.environment
			self.environment[k] = v;
	}

	void initialise_lexer(string source);

	void add_import(File file);

	void define_type(Type t);
	void push(ASTNode node);

	Context push_context();
	void pop_context();

	void push_block(Position position, bool is_void);
	Block pop_block();
}
