
// namespace Flux::Compiling;

// class for holding a type signature, i.e. function<void, int> or List<string> or MyNamespace::MyClass<>
import IRTypeComparison;

class IRTypeSignature {
	IRDefinitionPointer name;
	IRTypeSignature[] classes;

	IRTypeSignature(IRDefinitionPointer name, IRTypeSignature[] classes) {
		self.name = name;
		self.classes = classes;
	}

	// creates an IRTypeSignature from a Flux::Parsing::Type
	static IRTypeSignature fromAST(IRContext context, Flux::Parsing::Type t);

	// compares two signatures, returning the comparison result relative to the parameter (i.e. extends means self extends sig)
	IRTypeComparison compare(IRTypeSignature sig);

	// returns a string representation of the signature for debugging purposes
	string tostring();
}
