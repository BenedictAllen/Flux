
import flux;

let source_code = '
function(int x, y) = x + y;
lambda x y => x + y;

t = 1;
t = [1, 2, 3, 4];
table::map( t, lambda v => v + 1 );
print( t ); // [2, 3, 4, 5]
';

void main() {
	new Flux::Parsing::Source source();
	new Flux::Parsing::Lexer lexer( source_code );
	new Flux::Parsing::Context context();

	source.context = context;
	source.contexts[1] = context;
	source.lexer = lexer;

	let last = null;

	while !lexer:isEOF() {
		let expr = Flux::Parsing::Statement:parse( source );
		if expr {
			print( expr:serialize() );
		}
		else {
			print( "Nope" );
			break;
		}
	}
}
