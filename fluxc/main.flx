
import FluxInFlux.flux;

void main(string path) {
	string[] files = [ "main" ];

	new Flux::Parsing::Source source( path );
	new Flux::IR::State state();

	Flux::Parsing::Operator::init_standard_operators();

	if !source:import_project( files )
		error( "Failed to find '" `concat` files[1] `concat` "' file in " `concat` source.environment["PATH"], 0 );

	state:load_ast( source );

	foreach k, file in state.files {
		print( file.name `concat` ":" );
		foreach im in file.import_list
			print( "\timports " `concat` im.name );
		int i = 0;
		foreach decl in file.scope.declarations
			print( "\tdecl", ++i, decl.name );
		foreach s in file.statements
			print( "\t" `concat` s:serialize() );
	}
}
